{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE5B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCeOK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UCGJS,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACFC,YAAY,gBACZC,SAAWH,OCEHI,EATA,SAACC,GACf,OACE,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAkBC,OAAO,SAAjE,SACAJ,EAAMK,YCcMC,E,kDAfd,WAAYN,GAAO,IAAD,8BACjB,gBACKO,MAAQ,CACZC,UAAU,GAHM,E,8DAODC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAIzB,OAAOG,KAAKJ,MAAMC,SAAY,2DAAsCG,KAAKX,MAAMK,a,GAbtDQ,aC8CZC,G,wDAzCf,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAdzC,EAAKX,MAAQ,CACXlB,OAAQ,GACPK,YAAY,IAJH,E,gEAQO,IAAD,OAClByB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAU,CAAEvB,OAAQkC,S,+BAQjC,IAAD,EACyBZ,KAAKJ,MAA7BlB,EADD,EACCA,OAAQK,EADT,EACSA,YACR8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACrC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAErD,OAAStC,EAAOwC,OAGT,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAYU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACG,cAAC,EAAD,CAAU1B,OAAQmC,WAP/B,gD,GA1BUX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c485d9ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n// import { robots } from './robots'\r\n\r\nconst CardList = ({ robots }) => {\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t {\r\n\t\t robots.map((user,i)=> {\r\n\t\treturn  (\r\n\t\t\t\t<Card \r\n\t\t\t\tkey={robots[i].id}  \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t})\t\r\n\t\t }\r\n      \t</div>\r\n      );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input \r\n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t\ttype='search'\r\n\t\t\t    placeholder='search robots'\r\n\t\t\t    onChange= {searchChange}\r\n\t\t\t     />\r\n\t\t   </div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t  <div style={{overflowY:'Scroll', border:'5px solid black',height:'800px'}}>\r\n\t\t{props.children}\r\n\t  </div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Scroll;","import React,{ Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\r\n\t}\r\ncomponentDidCatch(error, info) {\r\n\tthis.setState({ hasError: true})\r\n}\r\n\r\n\trender() {\r\n\t\treturn this.state.hasError ?  <h1>Oooops. That is not good </h1> :  this.props.children;\r\n\t}\r\n}\r\nexport default ErrorBoundry;","import React,{ Component} from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\nconstructor() {\r\n  super()\r\n  this.state = {\r\n    robots: [],\r\n     searchfield:''\r\n  }\r\n}\r\n\r\ncomponentDidMount() {\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users=> this.setState ({ robots: users }));\r\n \r\n}\r\n\r\nonSearchChange = (event) => {\r\n  this.setState({searchfield: event.target.value})\r\n}\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state ;\r\n      const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n  })\r\n      return  !robots.length ? \r\n        <h1>Loading...</h1> :\r\n         (\r\n             <div className=\"tc\">\r\n               <h1 className=\"f1\">RoboFriends</h1>\r\n               <SearchBox  searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                  <ErrorBoundry>\r\n                     <CardList robots={filteredRobots}/>\r\n                  </ErrorBoundry>\r\n                </Scroll>\r\n               </div>\r\n        );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n   \t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}